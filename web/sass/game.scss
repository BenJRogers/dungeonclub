@use 'base.scss';
@use 'panels.scss';

%active {
    box-shadow: 0 0 6px var(--color-text-inverse) inset;
}

#boardContainer {
    position: relative;
    overflow: hidden;
    user-select: none;
    width: 100%;
    height: 100%;
    min-height: 500px;
    display: flex;
    justify-content: center;
    align-items: center;
    box-sizing: border-box;

    > .controls {
        position: absolute;
        z-index: 5;
        padding: 8px 16px;
        box-sizing: border-box;
        gap: 8px;

        button.active {
            color: var(--color-text-primary);
            background-color: var(--color-button-big);
        }

        #gridControls {
            display: flex;
            flex-direction: column;

            > span {
                display: flex;
                gap: 8px;
                align-items: center;
            }
        }
    }

    #sceneEditor {
        top: 16px;
        right: 16px;
    }

    #sceneSelector {
        @include panels.hooked(186px);
        width: 100%;
        border-radius: 0%;

        #scenes {
            flex-direction: row;
            overflow-x: auto;
            overflow-y: hidden;
            gap: 8px;
            padding: 8px 0 44px 0;

            > div {
                > div {
                    @include base.center-background;
                    min-width: 120px;
                    max-width: 120px;
                    height: 80px;
                    border-radius: base.$radius;
                    overflow: hidden;
                    box-sizing: border-box;
                    cursor: pointer;
                    border: 2px solid transparent;
                    position: relative;
    
                    &.editing {
                        @extend %active;
                        border-color: var(--color-text-primary);
                        border-style: dashed;
                    }
                    &.playing {
                        @extend %active;
                        border-color: var(--color-good) !important;
                    }
    
                    button {
                        border-radius: 0%;
                        width: 100%;
                        height: 100%;
                        opacity: 0;
                        background-color: var(--color-not-intense);
                        &:hover {
                            opacity: 0.8 !important;
                        }
                    }
                }

                > span {
                    padding: 2px 0;
                    display: flex;
                    justify-content: space-between;
                    opacity: 0;
                    transition-duration: 0.1s;

                    button.play:hover {
                        color: var(--color-good);
                    }
                }
                
                &:hover {
                    > div {
                        @extend %active;
                        border-color: var(--color-text-primary);
                        border-style: solid;
                        button {
                            opacity: 0.75;
                        }
                    }

                    > span {
                        opacity: 1;
                    }
                }
            }
        }
    }

    #playerControls {
        position: absolute;
        top: 16px;
        left: 16px;

        button {
            position: relative;
        }

        #dice {
            position: absolute;
            top: 0;
            left: calc(100% + 4px);
            background-color: var(--color-not-intense);
            padding: 4px;
            border-collapse: collapse;
            pointer-events: none;
            opacity: 0;
            transition-duration: 0.1s;
            overflow: hidden;

            td {
                @extend %clickable;
                padding: 4px;
                min-width: 20px;
                border: 1px solid var(--color-input-active);
                transition-duration: 0s;
            }
        }

        &:hover {
            #dice {
                pointer-events: all;
                opacity: 1;
            }
        }
    }
}

#session {
    display: flex;
    flex-direction: row;

    &:not(.is-gm) {
        .gm {
            display: none !important;
        }
    }

    > *:not(:last-child) {
        border-right: 2px solid var(--color-not-intense);
    }
}

.dice {
    color: var(--color-primary);
}
.roll {
    font-family: 'Courier New', Courier, monospace;
    padding: 0 2px;
}

#log {
    display: flex;
    flex-direction: column;
    min-width: 15vw;
    width: 25vw;
    max-width: 300px;
    overflow-x: hidden;
    overflow-y: auto;
    z-index: 2;

    > * {
        padding: 2px 8px;
        text-shadow: 0 0 10px #000a;
        font-size: 1.1em;

        > span {
            display: inline-flex;
        }

        &.hidden {
            opacity: 0.6;
        }
        &:hover {
            opacity: 1;
        }
        &:last-child {
            background-color: var(--color-not-intense);
        }
    }
}

#board {
    position: absolute;
    display: flex;
    transition-duration: 0.05s;
    border: 2px solid black;
    box-sizing: border-box;
    outline: 1px solid transparent;
}

#grid, canvas {
    position: absolute;
}

.movable {
    @include base.center-background;
    position: absolute;
    border: 2px solid slateblue;
    border-radius: 50%;
    width: calc(var(--size) * 100%);
    height: calc(var(--size) * 100%);
    overflow: hidden;
    box-sizing: border-box;

    --size: 1;

    &.accessible {
        cursor: move;
    }
}